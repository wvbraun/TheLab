getchar:

The getchar function is uself when you want to read data from a single 
character at a time. 

putchar: 
Allows you to to write data to the terminal a single character at a time.
The only argument it takes is the character to be displayed:

ex: 

putchar (c);

putchar ('\n');

---------------------------------------------------------
printf:
The general format of a print conversion is:

%[flags][width][.prec][hlL]type

Optional fields are in brackets. 

Flag		Meaning
-			Left-justify value
+			precede value with + or -
(space)		precede positive value with space character
0			zero fill numbers
#			precede octal value with 0, hexadecimal value with 0x; dispaly 
			decimal point for floats; leave trailing zeros for g or G format

----
printf width and precision modifiers:

number		minimum size of field
*			take next argument to printf as size of field
.number		minimum numberofdigits to display for integers; number of
			decimal places for e or f formats; maximum number of 
			significant digits to display for g; max number of characters
			for s format. 
.*			take next argument to printf as precision(and interpret as 
			indicated in preceding row.)

----
Type

hh		display int argument as a character
h*		display short integer
l*		display long int
ll*		display long long int
L		display long double
j*		display intmax_t or unitmax_t value
t*		display ptrdiff_t value
z*		display size_t value

----
Char

i or d		int
u			unsigned int
o			octal int
x			hexadecimal int, using a-f
X			hexadecimal int, using A-F
f or F		float, to six decimal places by default
e or E		flaot in exponential format. 
g			float in f or e format
G			floatin F or E fomrat
a or A		float in hexadecimal 0xd.dddd
c			single character
s			null-terminated character string
p			pointer
n			doesnt print anything; stores the number of characters 
			written so farby this call inside the int pointed to by the
			corresponding argument
%			precent sign

----------------------------------------------------------------------
scanf:

modifier	meaning

*			fieldis to be skipped and not assinged
size		maxsize of the input field
hh			value is to be stored in a signed or unsigned char
h			value is to be stored in a short int
l			value is to be stored in a long int, double, or wchar_t
j,z, or t	value is to be stored ina size_t(%j), ptrdiff_t(%z), intmax_t,
			or uintmax(%t)
ll			value is to be stored ina long long int
L			value is to be sotred ina long double
type		conversion character

------
Character	Acation

d			the value is to be read is expressed indecimal notation; the 
			corresponding arugment is a pointer to an int unless the
			h, l, or ll modifier is used, in which case the argument is a
			pointer to a short, long, or long long int. 
i			like %d expect numbers expressed in octal or hexadecimal can
			be used. 
u			the value to be read in an integer, and the corresponding 
			argument is a pointer to an unsigned int.
o			the value to be read is expressed in octal notaion and can be
			optionally preced by a 0. the corresponding argument is a 
			pointer to an int, unless h, l, orll precedes the letter o,
			in which casethe argument is  a pointer to a short, long, or
			long long
x			the value to be read is expressedin hexadecimal notation and
			can be preceded by a leading 0x or 0x;
a,e,f,org	the value to be read is expressed in float noation. 
c			the value to be read is a single character
s			the value to be readis a sequence of characters
[...]		characters in brackets indicat that a character string is to 
			be read read,as in %s. 
n			nothing gets read. 
p			the value is to be read is a pointer.
%			the next nonwhitespace character on input must be a %.
