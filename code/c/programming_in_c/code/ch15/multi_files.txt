Suppose you have divided your program into 3 modules called
mod1.c, mod2.c, and main.c, to tellthe system that these 3 modules 
belong to the same program, you include the name of all three files when
youenter the command to compile the program. 

ex using gcc:

$ gcc mod1.c mod2.c main.c -o dbtest

these make an executube called dbtest. 

------
Normally the complier generates intermediate object files for each
source file that it compile. the compiler placesthe resulting object
code from mod.c into mod.o by default. 

In general you can use the following sequence to compiler your three
module program dbtest using incremental compilation technique:

$ gcc -c mod1.c		- compile mod1.c -> mod1.o
$ gcc -c mod2.c		- compile mod2.c -> mod2.o
$ gcc -c main.c		- compile main.c -> main.o
$ gcc mod1.o mod2.o mod3.o -o dbtest 	- create executable

-------------------------------------
Using the above technique with larger programs is very effective. 

ex:

$ gcc -c legal.c		-compile legal.c -> legal.o
$ gcc legal.o makemove.o exec.o enumerator.o display.o -o superchess

could be used to compile a program consisting of 5 modules, in which the 
only module, legal.c, needed to be recompiled. 
