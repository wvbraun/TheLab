The make Utility:

The make program automatically recompiles files only when needed. So if 
make finds that your source (.c) file is newer than your (.o) file, it
automatically issues the commands to recompile the source. 

ex Makefile:

$ cat Makefile
SRC = mod1.c mod2.c main.c
OBJ = mod1.o mo2.o main.o
PROG = dbtest 

$ (PROG) : $ (OBJ)
	gcc $ (OBJ) -o $ (PROG)

$ (OBJ) : $ (SRC)

---
Heres what happens when you first run make:

$ make
gcc	-c -o mod1.o mod1.c
gcc	-c -o mod2.o mod2.c
gcc	-c -o main.o main.c
gcc mod1.o mod2.o main.o -o dbtest
$

---------------------------------------------------------
The cvs Utility:

This is one of the utilites for managing source code. It provides for
automatic version-tracking of source code, and keeps track of changes 
that are made to a module. This allows you to re-create a specific 
version of a program if needed. 

With cvs (Concurrent Version Systems), you "check out" a programing
(using the cvs command with the commit option). 

--------------------------------------------------------
Unix Utilites: ar, grep, sed, etc...:


You can use ar to create your own library

grep and sed are useful for searching for strings in a file
or making global changes to a set of files. 

ex:

$ grep todaysDate main.c

can be used to search the file main.c for all lines containing the string
todaysDate. 

ex:

$ grep -n todaysDate *.c *.h 
searches all source and header files in the current dir and displays each
matched preceded by its relative line number (use of -n option). 
