C allows you to assign an alt name to a data type by using
typedef. 

ex:

typedef int Counter;

defines the name counter to be equivalent to the C data type
int. 

variables can then be declared of type Counter
ex:

Counter j, n;

C treats j and n as normal int variables. 

---------------------------------------------------------
A typedef can be subsituted by the #define statment. 
ex:

#define Counter int

is the same as typedef int Counter; 

--------
typedef is more flexible. 
ex:

typedef char Linebuf [81];

defines an array of 81 characters. 

Linebuf text, inputLine; 
is the same as 

char text[81], inputLine[81];

----

ex:

typedef char *StringPtr;

defines StringPtr to be a char pointer. 

StringPtr buffer; 

-----------------------------------------------------
To define a new type name with typedef:

1. Write the statment as if a variable fo the desired type
were being declared. 

2. Where the name of the declared variable would normally 
appear, sub the new type name. 

3. Place typedef in front. 

ex:
To define a type called Date to be a structure contating 3
int members called month, day, and year, you write out the
stucture defintion, sub the name Date where the variable
name would appear, and place typedef in front. 

typedef struct { int month; int day; int year;} Date;

Date birthdays[100]; 

this defines birthdays to be an array containing 100 Date
structures. 
------

Suppose you are working on a graphics package that needs to 
deal with drawing lines, circles, etc. 

typedef struct { float x; float y;} Point;

Point origin = {0.0, 0.0}, currentPoint;

defines origin and currentPoint to be of type Point, and sets
x and y members of origin to 0.0. 


