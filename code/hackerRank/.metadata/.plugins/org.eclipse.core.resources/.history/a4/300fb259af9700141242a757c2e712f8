package code.interview.hackerRank.algorithms.impl;

import java.util.Scanner;

/**
 * Problem Statement
 * Watson gives to Sherlock an array: A1,A2,⋯,AN. He also gives to Sherlock two other 
 * arrays: B1,B2,⋯,BM and C1,C2,⋯,CM. 
 * Then Watson asks Sherlock to perform the following program:
 * 
 * 		for i = 1 to M do
 * 			for j = 1 to N do
 * 				if j % B[i] == 0 then
 * 					A[j] = A[j] * C[i]
 * 				endif
 * 		    end do
 * 		end do
 *
 * Can you help Sherlock and tell him the resulting array A? You should print all the 
 * array elements modulo (109+7).
 * 
 * Input Format 
 * The first line contains two integer numbers N and M. The next line contains N 
 * integers, the elements of array A. The next two lines contains M integers each, 
 * the elements of array B and C.
 * 
 * Output Format 
 * Print N integers, the elements of array A after performing the program modulo (109+7).
 * 
 * Constraints 
 * 1≤N,M≤105 
 * 1≤B[i]≤N 
 * 1≤A[i],C[i]≤105
 * 
 * Sample Input
 * 4 3
 * 1 2 3 4
 * 1 2 3
 * 13 29 71
 * 
 * Sample Output
 * 13 754 2769 1508

 */
public class SherlockAndQueries 
{
	private static void printElements(double[] A, double[] B, double[] C, int n, int m)
	{
		for (int i = 1; i <= m; ++i)
		{
			for (int j = 1; j <= n; ++j)
			{
				if (j % B[i - 1] == 0)
				{
					double tmp = A[j - 1] *= C[i - 1];
					A[j - 1] = tmp;
				}
			}
		}
		
		for (double e : A)
		{
			System.out.print((int) (e % (Math.pow(10, 9) + 7)) + " ");
		}
	}
	
	public static void main(String[] args)
	{
		int 	i;
		Scanner scanner = new Scanner(System.in);
		int		n	    = scanner.nextInt();
		int	    m  	 	= scanner.nextInt();
		double[] 	A	    = new double[n];
		double[]	B		= new double[m];
		double[]	C		= new double[m];
		
		for (i = 0; i < n; ++i)
		{
			A[i] = scanner.nextInt();
		}
		for (i = 0; i < m; ++i)
		{
			B[i] = scanner.nextInt();
		}
		for (i = 0; i < m; ++i)
		{
			C[i] = scanner.nextInt();
		}
		
		printElements(A, B, C, n, m);
		scanner.close();
	}

}
